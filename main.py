import telebot
import gspread
import uuid
import json
import os
from flask import Flask, request
from oauth2client.service_account import ServiceAccountCredentials

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ====
TELEGRAM_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
GOOGLE_CREDENTIALS_JSON = os.getenv("GOOGLE_CREDENTIALS_JSON")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
SPREADSHEET_NAME = "TelegramOrders"

# ==== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ====
print(f"‚úÖ TELEGRAM_TOKEN: {'Set' if TELEGRAM_TOKEN else 'Missing'}")
print(f"‚úÖ WEBHOOK_URL: {WEBHOOK_URL}")
print(f"‚úÖ GOOGLE_CREDENTIALS_JSON (start): {GOOGLE_CREDENTIALS_JSON[:100]}...")  # –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤

if not TELEGRAM_TOKEN or not GOOGLE_CREDENTIALS_JSON or not WEBHOOK_URL:
    raise ValueError("‚ùå –û–¥–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

# ==== Google Sheets ====
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]
creds_dict = json.loads(GOOGLE_CREDENTIALS_JSON)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)
sheet = client.open(SPREADSHEET_NAME).sheet1

# ==== Telegram Bot ====
bot = telebot.TeleBot(TELEGRAM_TOKEN)
app = Flask(__name__)
user_data = {}
user_state = {}

# ==== –ö–æ–º–∞–Ω–¥–∞ /start ====
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    user_data[user_id] = {}
    user_state[user_id] = 'order'
    bot.send_message(user_id, "üëã Hello! What would you like to order?")
    print(f"üëâ /start –æ—Ç {user_id}")

# ==== –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ====
@bot.message_handler(func=lambda m: True)
def handle_message(message):
    user_id = message.chat.id
    text = message.text
    print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {text}")

    if user_id not in user_state:
        bot.send_message(user_id, "Please type /start to begin.")
        return

    state = user_state[user_id]

    if state == 'order':
        user_data[user_id]['order'] = text
        user_state[user_id] = 'name'
        bot.send_message(user_id, "üë§ Your name?")
    elif state == 'name':
        user_data[user_id]['name'] = text
        user_state[user_id] = 'phone'
        bot.send_message(user_id, "üìû Your phone number?")
    elif state == 'phone':
        user_data[user_id]['phone'] = text
        user_state[user_id] = 'email'
        bot.send_message(user_id, "üìß Your email?")
    elif state == 'email':
        user_data[user_id]['email'] = text
        user_state[user_id] = 'address'
        bot.send_message(user_id, "üìç Delivery address or pickup?")
    elif state == 'address':
        user_data[user_id]['address'] = text
        user_state[user_id] = 'comment'
        bot.send_message(user_id, "üí¨ Any comments for the order?")
    elif state == 'comment':
        user_data[user_id]['comment'] = text
        order_id = str(uuid.uuid4())[:8]
        row = [
            order_id,
            user_data[user_id].get('order'),
            user_data[user_id].get('name'),
            user_data[user_id].get('phone'),
            user_data[user_id].get('email'),
            user_data[user_id].get('address'),
            user_data[user_id].get('comment'),
        ]
        sheet.append_row(row)
        bot.send_message(user_id, f"‚úÖ Thank you! Your order (ID: {order_id}) has been saved.")
        print(f"üì¶ Order saved: {row}")
        user_state.pop(user_id, None)
        user_data.pop(user_id, None)

# ==== Webhook endpoint ====
@app.route("/webhook", methods=['POST'])
def webhook():
    print("üåê Webhook triggered")
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        print(f"üì® Incoming update: {json_string[:200]}...")
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return '', 200
    else:
        print("‚ö†Ô∏è Unsupported content-type")
        return 'Unsupported Media Type', 415

@app.route("/", methods=["GET"])
def index():
    return "Bot is running"

# ==== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook ====
bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL)
print(f"üì° Webhook set to: {WEBHOOK_URL}")



